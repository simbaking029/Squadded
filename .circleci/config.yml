version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10.18

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn test:tap --maxWorkers=2

      - run:
          name: Prepare DEPLOY_VERSION
          command: |
            (DEPLOY_VERSION="$(date +%Y%m%d%H%M)-${CIRCLE_BUILD_NUM}" ; \
            echo ${DEPLOY_VERSION} >.deploy_version ; \
            echo "export DEPLOY_VERSION=${DEPLOY_VERSION}" >> $BASH_ENV ; \
            echo "DEPLOY_VERSION=${DEPLOY_VERSION}")

      - run:
          name: Prepare env
          command: |
            echo "DEPLOY_VERSION is: ${DEPLOY_VERSION}"
            echo "export BASE=/widget/${DEPLOY_VERSION}/" >> $BASH_ENV

      - run: yarn generate

      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist
            - .deploy_version
            - .circleci

  deploy:
    docker:
      - image: atlassian/pipelines-awscli:1.16.185
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy to S3
          command: (DEPLOY_VERSION=$(cat ~/repo/.deploy_version) ; aws s3 sync ~/repo/dist s3://${CD_SQUADDED_STATIC_BUCKET}/widget/${DEPLOY_VERSION} )
      - run:
          name: Prepare Index Redirection
          command: (DEPLOY_VERSION=$(cat ~/repo/.deploy_version) ; echo "<html><head><meta http-equiv=\"refresh\" content=\"0;URL=${DEPLOY_VERSION}/index.html\"/></head></html>" > /tmp/index.html )
      - run:
          name: Upload index
          command: aws s3 cp /tmp/index.html s3://${CD_SQUADDED_STATIC_BUCKET}/widget/squad-shopping.com.html
      - run:
          name: Prepare Share Redirection
          command: (DEPLOY_VERSION=$(cat ~/repo/.deploy_version) ; sed -e s/{{DEPLOY_VERSION}}/${DEPLOY_VERSION}/g ~/repo/.circleci/share.html > /tmp/share.html )
      - run:
          name: Upload share.html
          command: aws s3 cp /tmp/share.html s3://${CD_SQUADDED_STATIC_BUCKET}/widget/share-squad-shopping.com.html
      - run:
          name: Invalidate CloudFront cache
          command: aws cloudfront create-invalidation --distribution-id ${CD_CLOUDFRONT_DISTRIBUTION_ID} --paths "/widget/" "/widget/squad-shopping.com.html" "/widget/share-squad-shopping.com.html"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
