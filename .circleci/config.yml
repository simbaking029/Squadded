version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10.13.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
            - dist
            - package.json
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }} 

      - run: yarn test -- --reporters="jest-tap-reporter"

      - run:
          name: Prepare prod env file
          command: |
            (DEPLOY_VERSION=$(date +%s) ; echo ${DEPLOY_VERSION} >.deploy_version ; \
            echo "WS_LINK=${WS_LINK}" > .prod.env ; \
            echo "BASE=/widget/${DEPLOY_VERSION}/" >> .prod.env )

      - run: yarn build
      
      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist
            - .deploy_version

  deploy:
    docker:
      - image: circleci/python:3.7-stretch
    working_directory: ~/repo
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
          
      - attach_workspace:
          at: ~/repo

      - run:
          name: Deploy to S3
          command: (DEPLOY_VERSION=$(cat ~/repo/.deploy_version) ; aws s3 sync ~/repo/dist s3://${SQUAD_BUCKET}/widget/${DEPLOY_VERSION} )

      - run:
          name: Prepare Index Redirection
          command: |
            (DEPLOY_VERSION=$(cat ~/repo/.deploy_version) ; \ 
              echo "<html><head><meta http-equiv=\"refresh\" content=\"0;URL=${DEPLOY_VERSION}/\"/></head></html>" > /tmp/index.html )
      - run:
          name: Upload index
          command: aws s3 cp /tmp/index.html s3://${SQUAD_BUCKET}/widget/index.html

      - run:
          name: Invalidate CloudFront cache
          run: aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/widget/" "/widget/index.html"


workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

